---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: car-storage-setup
  labels:
    app: car-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: car-storage-setup-edit
  labels:
    app: car-storage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: car-storage-setup
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: car-storage-pvc
  labels:
    app: car-storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: car-storage-deployment
  labels:
    app: car-storage
    app.kubernetes.io/part-of: car-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: car-storage
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: car-storage
    spec:
      containers:
      - args:
        - minio server /data --console-address :9090
        command:
        - /bin/bash
        - -c
        envFrom:
        - secretRef:
            name: car-storage-root-user
        image: quay.io/minio/minio:latest
        name: car-storage
        ports:
        - containerPort: 9000
          name: api
          protocol: TCP
        - containerPort: 9090
          name: console
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        volumeMounts:
        - mountPath: /data
          name: car-storage-volume
      volumes:
      - name: car-storage-volume
        persistentVolumeClaim:
          claimName: car-storage-pvc
      - emptyDir: {}
        name: empty
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-car-storage-root-user
  labels:
    app: car-storage
    app.kubernetes.io/part-of: car-storage
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: car-storage
    spec:
      containers:
      - args:
        - -ec
        - |-
          if [ -n "$(oc get secret car-storage-root-user -oname 2>/dev/null)" ]; then
            echo "Secret already exists. Skipping." >&2
            exit 0
          fi
          genpass() {
              < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c"${1:-32}"
          }
          id=$(genpass 16)
          secret=$(genpass)
          cat << EOF | oc apply -f-
          apiVersion: v1
          kind: Secret
          metadata:
            name: car-storage-root-user
          type: Opaque
          stringData:
            MINIO_ROOT_USER: ${id}
            MINIO_ROOT_PASSWORD: ${secret}
          EOF
        command:
        - /bin/bash
        image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
        imagePullPolicy: IfNotPresent
        name: create-car-storage-root-user
      restartPolicy: Never
      serviceAccount: car-storage-setup
      serviceAccountName: car-storage-setup
---
apiVersion: v1
kind: Service
metadata:
  name: car-storage-service
  labels:
    app: car-storage
spec:
  ports:
  - name: api
    port: 9000
    targetPort: api
  - name: console
    port: 9090
    targetPort: 9090
  selector:
    app: car-storage
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: car-storage-console
  labels:
    app: car-storage
spec:
  port:
    targetPort: console
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: car-storage-service
    weight: 100
  wildcardPolicy: None
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: car-storage-s3
  labels:
    app: car-storage
spec:
  port:
    targetPort: api
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: car-storage-service
    weight: 100
  wildcardPolicy: None
